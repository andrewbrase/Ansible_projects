# ---
# - name: debug module demo
#   hosts: localhost
#   tasks:
#     - name: debug message
#       ansible.builtin.debug:
#         msg: "Hello world!"

# $ ansible-playbook -i demo/inventory debug.yml
# --->

# brasea@ubuntu:~/Desktop/Workspace/ansible_projects/01_basics$ ansible-playbook -i demo/inventory debug.yml
# [WARNING]: Unable to parse
# /home/brasea/Desktop/Workspace/ansible_projects/01_basics/demo/inventory as an
# inventory source
# [WARNING]: No inventory was parsed, only implicit localhost is available
# [WARNING]: provided hosts list is empty, only localhost is available. Note that
# the implicit localhost does not match 'all'

# PLAY [debug module demo] *******************************************************

# TASK [Gathering Facts] *********************************************************
# ok: [localhost]

# TASK [debug message] ***********************************************************
# ok: [localhost] => {
#     "changed": false,
#     "msg": "Hello world!"
# }

# PLAY RECAP *********************************************************************
# localhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

# brasea@ubuntu:~/Desktop/Workspace/ansible_projects/01_basics$ ansible-playbook -i demo/inventory debug.yml

# ////
# ---
# - name: ansible test of vars
#   hosts: localhost
#   vars:
#     fruit: "apple"
#   tasks:
#     - name: fruit message
#       ansible.builtin.debug:
#         var: fruit

# TASK [fruit message] ***********************************************************
# ok: [localhost] => {
#     "changed": false,
#     "fruit": "apple"
# }

# ////
# ---
# - name: ansible test of vars
#   hosts: localhost
#   vars:
#     fruit: "apple"
#   tasks:
#     - name: fruit message
#       ansible.builtin.debug:
#         msg: "this is an {{ fruit }} "

# TASK [fruit message] **********************************************************************************
# ok: [localhost] => {
#     "changed": false,
#     "msg": "this is an apple "
# }

# ////


# Console commands have different verbosity levels, 
# which determine the messages displayed in their output. 
# By default, commands display only the most useful messages, 
# but you can control their verbosity with the -q and -v 
# options:
# ---
# - name: ansible test of vars
#   hosts: localhost
#   vars:
#     fruit: "apple"
#   tasks:
#     - name: fruit message
#       ansible.builtin.debug:
#         msg: "this is an {{ fruit }} "
#         verbosity: 2

# $ ansible-playbook -i demo/inventory -vv debug.yml

# --->
# TASK [fruit message] ****************************************************************************************
# task path: /home/brasea/Desktop/Workspace/ansible_projects/01_basics/debug.yml:84
# ok: [localhost] => {
#     "changed": false,
#     "msg": "this is an apple "
# }
# META: ran handlers
# META: ran handlers

# -------------------------------------------------------------------------------------------------------------
# Ansible pasuse execution
# - ansible.builtin.pause

#            --parameters--
# -minutes *string | a positive number of minutes
# -seconds *string | a positive number of seconds
# -prompt *string  | "text message"
# -echo *boolean   | yes/no 

---
- name: pause module demo
  hosts: localhost
  vars:
    wait_seconds: 4
  tasks:
    - name: pause for {{ wait_seconds }} second(s)
      ansible.builtin.pause:
        seconds: "{{ wait_seconds | int }}"
    
    - name: msg after pause
      ansible.builtin.debug:
        msg: "hello world after {{ wait_seconds }} second(s)"

# TASK [Gathering Facts] **************************************************************************************
# ok: [localhost]

# TASK [pause for 4 second(s)] ********************************************************************************
# Pausing for 4 seconds
# (ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
# ok: [localhost]

# TASK [msg after pause] **************************************************************************************
# ok: [localhost] => {
#     "changed": false,
#     "msg": "hello world after 4 second(s)"
# }





